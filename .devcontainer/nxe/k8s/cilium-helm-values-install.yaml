---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlhRVloblJTVVNQVDAxOUsyM2ZUZ1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd01UQXdORFF6TjFvWERUSTJNREl5T0RBdwpORFF6TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwM3oxZ2hmRnpWaTZCazVyREEvRDdOUjE3Y1NOOXk1T3cvRFlaTzdmMUJINFRROGkKYzNjYVVDQ0ZnQzJocVBZeGlOc2V2ZFZRUlZZVXBpcnpLVytyTlBCckRKZWppczdyQUxzSEtWQWNGMzVOZ1ZtYwp5QzcrcE5YTjBUeUpyRngwNmNJdmpKS1oyUm0xT1NzS2R0cVNOSlJxZENVSUNod25yUFcyUEdnKzl3NStQZ3JCCk5UMHNWYXVYMytTMnJ1ckV5NW5qVjR2TldzczlPVWZkY1RSWlBpNUlSMlNqaWpoRTFYejZ5bm0vSXl6MnlLb1EKSzczOEVySnhjL3V2cHZWQTVpRi9DRU9WK2FJQUF5TGY0V202Z3ptS3JSU3ZEYk4xWHJuZHJCNEVQd0p4VXpUegoySXBUV200QXhSK1pTbjY4eFJpR05UUklIWE1lY1p0WlF6c0hnd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGpOZ1RNd09NTjI2UUdIQ2FpV25iUDFpRU1CTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJTRWM5bm81ajltcUVNZ1lmcFhOMnIvNHNjNEFObHRwN0hVRFJSbCtPM3NZQTZTa3VHWTJRCjhyT0FOTXNiRUpwSTYzRk9OYnVKNXRJdURpQW5hOU82anl3K1FhTDdTZWx3Uk5TQUZCLzJrTXBpTGpoZkdqOUwKMEtvdmdLNm1yK2hCN3dhM3UrRkNvek1nZHBwVVNuY3Vyc2FyYVVjRG9ta3NtNjJ3cXk4SnZDZ3lzRE5rOThiWgoydktvZkZFMWxhT0ZaM3pObk84NUY4ck5jZnpId28zUmVMU0FGYVY4NEVwSXMzNHZnVWxZWDVqblhBUVNDbFVzClRnZ1JTUmx6RU9RdWZ1ZTBjeGdiSGlHcVBGbElMU0lwSzJ2RC9MZEtwVWo0ZVpEM1gvYmswWnQvL2E2ZUhYVzIKeDNBelJoYkIxU1gvSnpSRzBaV2RPRG9ZRnJhbVpUK2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMDN6MWdoZkZ6Vmk2Qms1ckRBL0Q3TlIxN2NTTjl5NU93L0RZWk83ZjFCSDRUUThpCmMzY2FVQ0NGZ0MyaHFQWXhpTnNldmRWUVJWWVVwaXJ6S1crck5QQnJESmVqaXM3ckFMc0hLVkFjRjM1TmdWbWMKeUM3K3BOWE4wVHlKckZ4MDZjSXZqSktaMlJtMU9Tc0tkdHFTTkpScWRDVUlDaHduclBXMlBHZys5dzUrUGdyQgpOVDBzVmF1WDMrUzJydXJFeTVualY0dk5Xc3M5T1VmZGNUUlpQaTVJUjJTamlqaEUxWHo2eW5tL0l5ejJ5S29RCks3MzhFckp4Yy91dnB2VkE1aUYvQ0VPVithSUFBeUxmNFdtNmd6bUtyUlN2RGJOMVhybmRyQjRFUHdKeFV6VHoKMklwVFdtNEF4UitaU242OHhSaUdOVFJJSFhNZWNadFpRenNIZ3dJREFRQUJBb0lCQUhkQ3B6dTJaaS8zVWVmTwpmdVV0V3NJSnlYck1kWFluWWZseXJzUzBRL3BXSzl4Z3BYL1JjVUF3SnJoeWd4QkJ6UXNzN2JnRk81L3QrL1Q4CmtXVVRlTXVBckExTTBjZXNDYSsreURvTzE5aVR1K2N1ZnBBUW1ENmg1cytRUU42MndLTTFneFRWY3ZhUFhiZWcKUXVWbE9qOTJWbFdxc0U3ck02Q0FhMFREVUlhR1dabHFNSzlEb0p0ZzlJZWttMEY4c2RDQ0d4S3lVVHhqMlRSTQp2ditPN0s1bjUybXRZT29nWWxMcW44RWRjM3VuaWdIQ05TbUVkOG1SV3VkYmJaNGh3UStuQkRWaHZpZGI0V21iCmlHRFNCOUxnVG9KbEhrOGNlVnJTbk9tcW15dEtmRk00blBqQW13MXRsbENDaVhqeUs2SGhFZWErd1FnSFZvR3oKOU9kVGxKRUNnWUVBK3FDWm4vMVFXaFJDQlI4aXprL0dwMUJ3d3N4T1haY1pZTENyYWhWZnVBNW9SY2lNNXNjZAoyRFcvZDRBTXFwSG93QWxUQzlodHZxVU84WHhnSkxwZ2VIWnVxd2FDSDJTZzFhajRKNkFJTEhHT2JCTWVKaytiCjlGUnYyYzFGOCtTS3F0WnVrSjBDanNmNC9DNkVsWFZyb0ZZM0ZKd25EeTFTVGk4V3luZk96V3NDZ1lFQTJBV1IKejMydGNNQmZkNm9UM2trTFhPNUVRMUdUd3N6UFlVMUVwRzFnaTd0RHhTYzBRNEpLM0lwN1Zib1lKc3hxYXg3RApySU9mNnpSMG55NmdUd0NCNjJNUjlRbnYwbHRVa3h6QXM5eDY0ZVpjTU9RRDBMRCtraGVqT3JrazBxQzh5TkxsCi9MUTFQNHZkZUxLT2ozWjdnTit6eHBmU0wzYWlMWW5DSzBKUVhFa0NnWUVBb1l6TCtiakxCb1Z3V09UTkJyZWQKa1ZQa20yd2VSMjJTU2lVWEdQWldFTW9ZcElLMWNEeUJIRkRvN2hwNEQ2cWxvTU5oNkl6RmtOSE1aQlNMMUtEZQpka2ZBNWpUM3cweVY3Nk5POGh2UnFQUTVuYWhsRXNUVi9oUS9WT0ZnYWVtekNKUFlDUmRzQXFVYjlWSDIzSEFuCnc5NU8rdFg4eDJlcldnSTRhcUgzaDZrQ2dZQUxlakJIRCt4Wkl6OXZRakFRRFYxM01JbWI4Z2Vodi9QOHZYZzYKTEQyRzd3b292VzUvYjdxK2dQVVFsdlNWaXlMVVVpd2ZURmNBemlhc0ZuUVovbkxvcUxqWmhnK2g0NHhZekp4SQpjaHh0U0NuNXh3T1U0UEtGbkkvbG5OU2lCRHhEaDBFRTdpWXVIQ1pHTldaeHBOL205dnU4UDNEQmFOSXhEVEt0CnpiWXJVUUtCZ1FDREE2ZTdKZEdRZkZQa292b1NyamJET3ZraHFjWE16Y1hFQjM2QTVzZ1VySW9YWitneElXeHUKU3lzeVFMNU5HYWlVaWQ5OGE2TjdxcXh2LzNIOURJTVoxVWxyYkRBbzhLaE92WlBYSFNVQ29tZ1JJY2lxeXJxNwo4MEw4dk5ONDlzTEJkMVh4bnlkRGxVd3hoMFJzcjdwa0Q4ZFhXRU1iaStBb2F0S214TGhjZWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlhRVloblJTVVNQVDAxOUsyM2ZUZ1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd01UQXdORFF6TjFvWERUSTJNREl5T0RBdwpORFF6TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwM3oxZ2hmRnpWaTZCazVyREEvRDdOUjE3Y1NOOXk1T3cvRFlaTzdmMUJINFRROGkKYzNjYVVDQ0ZnQzJocVBZeGlOc2V2ZFZRUlZZVXBpcnpLVytyTlBCckRKZWppczdyQUxzSEtWQWNGMzVOZ1ZtYwp5QzcrcE5YTjBUeUpyRngwNmNJdmpKS1oyUm0xT1NzS2R0cVNOSlJxZENVSUNod25yUFcyUEdnKzl3NStQZ3JCCk5UMHNWYXVYMytTMnJ1ckV5NW5qVjR2TldzczlPVWZkY1RSWlBpNUlSMlNqaWpoRTFYejZ5bm0vSXl6MnlLb1EKSzczOEVySnhjL3V2cHZWQTVpRi9DRU9WK2FJQUF5TGY0V202Z3ptS3JSU3ZEYk4xWHJuZHJCNEVQd0p4VXpUegoySXBUV200QXhSK1pTbjY4eFJpR05UUklIWE1lY1p0WlF6c0hnd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGpOZ1RNd09NTjI2UUdIQ2FpV25iUDFpRU1CTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJTRWM5bm81ajltcUVNZ1lmcFhOMnIvNHNjNEFObHRwN0hVRFJSbCtPM3NZQTZTa3VHWTJRCjhyT0FOTXNiRUpwSTYzRk9OYnVKNXRJdURpQW5hOU82anl3K1FhTDdTZWx3Uk5TQUZCLzJrTXBpTGpoZkdqOUwKMEtvdmdLNm1yK2hCN3dhM3UrRkNvek1nZHBwVVNuY3Vyc2FyYVVjRG9ta3NtNjJ3cXk4SnZDZ3lzRE5rOThiWgoydktvZkZFMWxhT0ZaM3pObk84NUY4ck5jZnpId28zUmVMU0FGYVY4NEVwSXMzNHZnVWxZWDVqblhBUVNDbFVzClRnZ1JTUmx6RU9RdWZ1ZTBjeGdiSGlHcVBGbElMU0lwSzJ2RC9MZEtwVWo0ZVpEM1gvYmswWnQvL2E2ZUhYVzIKeDNBelJoYkIxU1gvSnpSRzBaV2RPRG9ZRnJhbVpUK2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMDN6MWdoZkZ6Vmk2Qms1ckRBL0Q3TlIxN2NTTjl5NU93L0RZWk83ZjFCSDRUUThpCmMzY2FVQ0NGZ0MyaHFQWXhpTnNldmRWUVJWWVVwaXJ6S1crck5QQnJESmVqaXM3ckFMc0hLVkFjRjM1TmdWbWMKeUM3K3BOWE4wVHlKckZ4MDZjSXZqSktaMlJtMU9Tc0tkdHFTTkpScWRDVUlDaHduclBXMlBHZys5dzUrUGdyQgpOVDBzVmF1WDMrUzJydXJFeTVualY0dk5Xc3M5T1VmZGNUUlpQaTVJUjJTamlqaEUxWHo2eW5tL0l5ejJ5S29RCks3MzhFckp4Yy91dnB2VkE1aUYvQ0VPVithSUFBeUxmNFdtNmd6bUtyUlN2RGJOMVhybmRyQjRFUHdKeFV6VHoKMklwVFdtNEF4UitaU242OHhSaUdOVFJJSFhNZWNadFpRenNIZ3dJREFRQUJBb0lCQUhkQ3B6dTJaaS8zVWVmTwpmdVV0V3NJSnlYck1kWFluWWZseXJzUzBRL3BXSzl4Z3BYL1JjVUF3SnJoeWd4QkJ6UXNzN2JnRk81L3QrL1Q4CmtXVVRlTXVBckExTTBjZXNDYSsreURvTzE5aVR1K2N1ZnBBUW1ENmg1cytRUU42MndLTTFneFRWY3ZhUFhiZWcKUXVWbE9qOTJWbFdxc0U3ck02Q0FhMFREVUlhR1dabHFNSzlEb0p0ZzlJZWttMEY4c2RDQ0d4S3lVVHhqMlRSTQp2ditPN0s1bjUybXRZT29nWWxMcW44RWRjM3VuaWdIQ05TbUVkOG1SV3VkYmJaNGh3UStuQkRWaHZpZGI0V21iCmlHRFNCOUxnVG9KbEhrOGNlVnJTbk9tcW15dEtmRk00blBqQW13MXRsbENDaVhqeUs2SGhFZWErd1FnSFZvR3oKOU9kVGxKRUNnWUVBK3FDWm4vMVFXaFJDQlI4aXprL0dwMUJ3d3N4T1haY1pZTENyYWhWZnVBNW9SY2lNNXNjZAoyRFcvZDRBTXFwSG93QWxUQzlodHZxVU84WHhnSkxwZ2VIWnVxd2FDSDJTZzFhajRKNkFJTEhHT2JCTWVKaytiCjlGUnYyYzFGOCtTS3F0WnVrSjBDanNmNC9DNkVsWFZyb0ZZM0ZKd25EeTFTVGk4V3luZk96V3NDZ1lFQTJBV1IKejMydGNNQmZkNm9UM2trTFhPNUVRMUdUd3N6UFlVMUVwRzFnaTd0RHhTYzBRNEpLM0lwN1Zib1lKc3hxYXg3RApySU9mNnpSMG55NmdUd0NCNjJNUjlRbnYwbHRVa3h6QXM5eDY0ZVpjTU9RRDBMRCtraGVqT3JrazBxQzh5TkxsCi9MUTFQNHZkZUxLT2ozWjdnTit6eHBmU0wzYWlMWW5DSzBKUVhFa0NnWUVBb1l6TCtiakxCb1Z3V09UTkJyZWQKa1ZQa20yd2VSMjJTU2lVWEdQWldFTW9ZcElLMWNEeUJIRkRvN2hwNEQ2cWxvTU5oNkl6RmtOSE1aQlNMMUtEZQpka2ZBNWpUM3cweVY3Nk5POGh2UnFQUTVuYWhsRXNUVi9oUS9WT0ZnYWVtekNKUFlDUmRzQXFVYjlWSDIzSEFuCnc5NU8rdFg4eDJlcldnSTRhcUgzaDZrQ2dZQUxlakJIRCt4Wkl6OXZRakFRRFYxM01JbWI4Z2Vodi9QOHZYZzYKTEQyRzd3b292VzUvYjdxK2dQVVFsdlNWaXlMVVVpd2ZURmNBemlhc0ZuUVovbkxvcUxqWmhnK2g0NHhZekp4SQpjaHh0U0NuNXh3T1U0UEtGbkkvbG5OU2lCRHhEaDBFRTdpWXVIQ1pHTldaeHBOL205dnU4UDNEQmFOSXhEVEt0CnpiWXJVUUtCZ1FDREE2ZTdKZEdRZkZQa292b1NyamJET3ZraHFjWE16Y1hFQjM2QTVzZ1VySW9YWitneElXeHUKU3lzeVFMNU5HYWlVaWQ5OGE2TjdxcXh2LzNIOURJTVoxVWxyYkRBbzhLaE92WlBYSFNVQ29tZ1JJY2lxeXJxNwo4MEw4dk5ONDlzTEJkMVh4bnlkRGxVd3hoMFJzcjdwa0Q4ZFhXRU1iaStBb2F0S214TGhjZWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlhRVloblJTVVNQVDAxOUsyM2ZUZ1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd01UQXdORFF6TjFvWERUSTJNREl5T0RBdwpORFF6TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwM3oxZ2hmRnpWaTZCazVyREEvRDdOUjE3Y1NOOXk1T3cvRFlaTzdmMUJINFRROGkKYzNjYVVDQ0ZnQzJocVBZeGlOc2V2ZFZRUlZZVXBpcnpLVytyTlBCckRKZWppczdyQUxzSEtWQWNGMzVOZ1ZtYwp5QzcrcE5YTjBUeUpyRngwNmNJdmpKS1oyUm0xT1NzS2R0cVNOSlJxZENVSUNod25yUFcyUEdnKzl3NStQZ3JCCk5UMHNWYXVYMytTMnJ1ckV5NW5qVjR2TldzczlPVWZkY1RSWlBpNUlSMlNqaWpoRTFYejZ5bm0vSXl6MnlLb1EKSzczOEVySnhjL3V2cHZWQTVpRi9DRU9WK2FJQUF5TGY0V202Z3ptS3JSU3ZEYk4xWHJuZHJCNEVQd0p4VXpUegoySXBUV200QXhSK1pTbjY4eFJpR05UUklIWE1lY1p0WlF6c0hnd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGpOZ1RNd09NTjI2UUdIQ2FpV25iUDFpRU1CTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJTRWM5bm81ajltcUVNZ1lmcFhOMnIvNHNjNEFObHRwN0hVRFJSbCtPM3NZQTZTa3VHWTJRCjhyT0FOTXNiRUpwSTYzRk9OYnVKNXRJdURpQW5hOU82anl3K1FhTDdTZWx3Uk5TQUZCLzJrTXBpTGpoZkdqOUwKMEtvdmdLNm1yK2hCN3dhM3UrRkNvek1nZHBwVVNuY3Vyc2FyYVVjRG9ta3NtNjJ3cXk4SnZDZ3lzRE5rOThiWgoydktvZkZFMWxhT0ZaM3pObk84NUY4ck5jZnpId28zUmVMU0FGYVY4NEVwSXMzNHZnVWxZWDVqblhBUVNDbFVzClRnZ1JTUmx6RU9RdWZ1ZTBjeGdiSGlHcVBGbElMU0lwSzJ2RC9MZEtwVWo0ZVpEM1gvYmswWnQvL2E2ZUhYVzIKeDNBelJoYkIxU1gvSnpSRzBaV2RPRG9ZRnJhbVpUK2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQVBzcnZKSTdVc1Jldlc5dUdiOXhwMzB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd01UQXdORFF6TjFvWERUSTJNREl5T0RBdwpORFF6TjFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUx2VHd4ZEhvM3ZjYitidmhSQjIKUmtROEswdExVQ21VQ0s3YVJpUHMvSzVHNy9iMFZieEhWVEVNTG5rN3NudzFUeHI3d3hXeFREUkZDdlhpSEhFcApWZjFjWEVuMmZPbzZlYmZrYzFLNnZ5UG9OYkk2ZkdINVg5Tmx0OHdEcFZ3QUhTTVpkY2ZBSVg4S1pTVzU2eTBsCjdWVzE1T3ZZQmFaeGRBVnIwdEN6bGo3SXI5c25JMVNUOXhKRmlaTzQzQVJPZFhldUQxNEtHL1pxR1pCcHlEWFYKUkVVZUFjZkUwMGVERmZJa1QrUlBUaGF6NWsvS21KS1oyeS96c0dVZzhvUnFQYm8wTUp1WUwwSTNVdkNZWFF4ZwpzaFllZFJWTk01Z1FmOWJkcVZSa25GK3l0ZE1XckNpTkQrVVlhUXE0ZmZ1VWpUMmFmODVJZkEwV1RYVXlLMjMrCk5uOENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVStNMkJNekE0dzNicApBWWNKcUphZHMvV0lRd0V3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVQ0R1lNSlRvQzQwb0RKUWFVc1A2K2JLZll1Z00KWE5VYWdLMUZQaUVSbjhwZzlYTStDdjhMUW1Qd0d3S3I4NGoydUd4aFZyM0hoaW02dU5TVkNtRXFST2Zoa3FRbgpMTXBETkhNb3dpUHBNV0szdWlBdnp3NHVIdWlaa3U4NFZ0SksxSFRMSHFBaThSQjFZOG1BTi8wQ0dmcHVycjdtCnFBUWh6eDNIZit1ay9SY05zZEk2dUMzREhaNHB6bEpiWmhINTdxNVBzSGhuSWgvT3dseVlwNCsxMFVPNkFPN1IKbmorRm5lSUR2T2F1cnpnbllaV1pRUTZVa29LVTJoemVpdDFaVjdnT2JsUFQ3VENhdTh2RTQrZGxDaVFlSk9FbwpmSDdwTlhydUdDK0IzTlZLUzkzdXVxanVEVDhMRW9oOFk1WlhSSGxTeXhRM05FWlFLcEdGenptanh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdTlQREYwZWplOXh2NXUrRkVIWkdSRHdyUzB0UUtaUUlydHBHSSt6OHJrYnY5dlJWCnZFZFZNUXd1ZVR1eWZEVlBHdnZERmJGTU5FVUs5ZUljY1NsVi9WeGNTZlo4NmpwNXQrUnpVcnEvSStnMXNqcDgKWWZsZjAyVzN6QU9sWEFBZEl4bDF4OEFoZndwbEpibnJMU1h0VmJYazY5Z0ZwbkYwQld2UzBMT1dQc2l2MnljagpWSlAzRWtXSms3amNCRTUxZDY0UFhnb2I5bW9aa0duSU5kVkVSUjRCeDhUVFI0TVY4aVJQNUU5T0ZyUG1UOHFZCmtwbmJML093WlNEeWhHbzl1alF3bTVndlFqZFM4SmhkREdDeUZoNTFGVTB6bUJCLzF0MnBWR1NjWDdLMTB4YXMKS0kwUDVSaHBDcmg5KzVTTlBacC96a2g4RFJaTmRUSXJiZjQyZndJREFRQUJBb0lCQUF2YlJVQnQ5RUw0V2xRQQpvS3kyV3A4cUVTMlNsbi9aYVdib1BtODhJWU02MVNFSXNYVE9KL0dOckUxWTJGNkEydnFBRkFPRmlxTHVETkFTCnN1cnR5aERSU0w0ZWdpb2pBTlg3NU0rL0hCdS9KOHlWWm82a3VFalc3ZkJCOXFsRkZKSEhwS2kwVnlqMjFnVzQKbzhEWTJRK0ZDT3RlV3BUMEtuZkJJN0NxOVh3SEFVa1BQV0FOV1FQUjVpL0dpbm0xWDVvV1ZUVi9iVmw4SDdjYgprOWh1cFpXT3g5STIvRzRaMDJrM1R2dUoyUkNjK1o3c3E0UFBnMkdpK2xzc1B2TWhFTXgybXJYUzR5V1FWMzMzCmwvMWZ6SGhsSlBQWFh5RnM1dWJMYnE1TG50SVlzd2p4NFpXN08xaTczakc5OWFQVnZ3amRmS3ZmMThkVENmM1kKZlhjcEJ4a0NnWUVBOGdzWkJRKzRkTFFyOEFUMkdNZFI2dlhadzdjM2E0ZnIwbHFTdU5Fd01aWWk3VXY3bVQyZgpHZGJ3Wmo2Z2RJYTM0STJrY3JzZkUvSDJmbGU1aWlpbEZrRVhuaE14dzVJc3pXUGtBS2hjY05XTTA4SnUycktvCllnaTBHWDRSdlJiS2wvcE9tdzg3QS9lTWFMR21hVjRYSHVaTVJLNzJYbjdVQUJ0MzNYc2VvQ3NDZ1lFQXhxaGIKY1N2QVJ4TmFneDE1YXlxdDN5R2I1MnBqWUIyMXRmWlZIU0ZKekZBSWkrblNXRnJRaGNtNU1QRnZjbUVEdmpzTApzcGNmUHJscktHUEFnaFBkS3hkZ2tZUW52TWtDdUtUVktRZ2pGTCtDZ29JUU9Za0VXRDFIZTQ2bHVSODZtR1J6CmdVLzQ3d2drYXU0eGZnS3o1TjNOUFJTRmowZ28yWVJsUXVUTHhQMENnWUJJK1gyV29CRzk1ZUJsWWltTWVQUEMKd2xMZ2hpbklXdGVIdVZVSk1kQzA4bzRmTzB4ay9FWXV0VFlQcll3VTlkVVVkNy8vODFqQVc3QTBrV0JZUGo3Zgp3Y3BNRjM5bWRualpoK2RqSjErUGlXTUhLVlRnelFLbFkvaGd3emkzNk5vMkRmcUxGNEYwaGJzb2lYOGh2NE43CkJuWXlNd29HblhodmU5aWN4eFVKdHdLQmdHSkpuOXh4WWhPSVhzcnFSVTJoY3g4bnVNUVpYZ3VMQjRGODNBV3EKbDZHdm8xcmVHQVZCQVZTQVJ0RVJVeXVMRmxnRFRMbFNqZEh4MlRQRmp0U00wV3RsaUpEV2l2YWJtVzRUbDZkUwpjRkR1bzdyQWNSaVdVd0Q1YUttWUhTUm5jQTAvL2VubjBHa3JaU0ZHc2xQL01GUTI3VG1nTXFoK2NqK1VncWxECkhCSmRBb0dBYitFRTJWKzNPcnNHS1RTOSthMStUMWhKVGcrK0JjbmdDSUV4Ullic0FxK0dSWXV4UEUwaWhlTHoKYnMrL0ZCa0N1SWVqbUpGRWNTb2VDdHRtUHlKV1QvSEYwTGdHKzF2MEFUWXNOZUNaNnNmL09LbTFoNThLNWxIcgpLQ2gxVldZcm9DenRDeVYrcXptRmg2WFJFdVlTaWh0b2dGZ2F4TzJYMjdHTDgzSzF1Mkk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "geneve"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"
  enable-host-firewall: "true"

  kube-proxy-replacement: "partial"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-routes: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "244.16.0.0/12"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "240.0.0.250"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "240.0.0.250"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "240.0.0.250"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.0@sha256:4b58d5b33e53378355f6e8ceb525ccf938b7b6f5384b35373f1f46787467ebf5"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "240.0.0.250"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
