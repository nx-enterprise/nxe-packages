ARG VARIANT=0.203.2-ubuntu-22.04
FROM mcr.microsoft.com/vscode/devcontainers/base:${VARIANT} as builder

RUN apt update && sudo apt install golang git -y
RUN cd /tmp && git clone https://github.com/ochinchina/supervisord.git supervisord
RUN cd /tmp/supervisord && sed -i 's/Go-Supervisor/NXE Devcontainer Supervisor/g' webgui/index.html webgui/index.html.modify
RUN cd /tmp/supervisord && go generate && GOOS=linux go build -tags release -a -ldflags "-linkmode external -extldflags -static" -o /usr/local/bin/supervisord

FROM mcr.microsoft.com/vscode/devcontainers/base:${VARIANT} as final

# bring over our supervisor
COPY --from=builder /usr/local/bin/supervisord /usr/local/bin/supervisord

ARG NXE_SCRIPTS
ARG NXE_SHELL
ARG NXE_CONFIG
ARG NXE_DAPR

# Load up
WORKDIR /
RUN mkdir -p $NXE_CONFIG
RUN mkdir -p $NXE_SCRIPTS
RUN mkdir -p $NXE_SHELL
RUN mkdir -p $NXE_DAPR/components
COPY config/* $NXE_CONFIG
COPY scripts/* $NXE_SCRIPTS
COPY shell/* $NXE_SHELL
COPY dapr/components/* $NXE_DAPR/components
COPY dapr/config.yaml $NXE_DAPR

RUN /bin/bash $NXE_SCRIPTS/nxe-pre-git-config.sh # git configuration
RUN /bin/bash $NXE_SCRIPTS/nxe-pre-cleanup.sh    # cleanup

# Setting the ENTRYPOINT to docker-init.sh will configure non-root access
# to the Docker socket. The script will also execute CMD as needed.
ENTRYPOINT [ "/usr/local/share/docker-init.sh" ]
CMD [ "sleep", "infinity" ]
