ARG VARIANT=jammy
FROM mcr.microsoft.com/vscode/devcontainers/base:${VARIANT}

ARG NXE_SCRIPTS=/nxe/scripts
ARG NXE_SHELL=/nxe/shell
ARG NXE_CONFIG=/nxe/config
ARG NXE_DAPR=/nxe/dapr

# Load up
WORKDIR /
RUN mkdir -p $NXE_CONFIG
RUN mkdir -p $NXE_SCRIPTS
RUN mkdir -p $NXE_SHELL
RUN mkdir -p $NXE_DAPR/components
COPY config/* $NXE_CONFIG
COPY scripts/* $NXE_SCRIPTS
COPY shell/* $NXE_SHELL
COPY dapr/components/* $NXE_DAPR/components
COPY dapr/config.yaml $NXE_DAPR

RUN /bin/bash $NXE_SCRIPTS/nxe-pre-git-config.sh   # git configuration
RUN /bin/bash $NXE_SCRIPTS/nxe-pre-golang.sh       # golang install
RUN /bin/bash $NXE_SCRIPTS/nxe-pre-supervisord.sh  # supervisord install
RUN /bin/bash $NXE_SCRIPTS/nxe-pre-k8s-cli.sh      # install k8s cli
RUN /bin/bash $NXE_SCRIPTS/nxe-pre-cilium-cli.sh   # install cilium cli
RUN /bin/bash $NXE_SCRIPTS/nxe-pre-caddy.sh        # install caddy
RUN /bin/bash $NXE_SCRIPTS/nxe-pre-nerd-fonts.sh   # install Nerd Fonts
RUN /bin/bash $NXE_SCRIPTS/nxe-pre-starship.sh     # install starship
RUN /bin/bash $NXE_SCRIPTS/nxe-pre-git-config.sh   # git configuration
RUN /bin/bash $NXE_SCRIPTS/nxe-pre-cleanup.sh      # cleanup

# Setting the ENTRYPOINT to docker-init.sh will configure non-root access
# to the Docker socket. The script will also execute CMD as needed.
ENTRYPOINT [ "/usr/local/share/docker-init.sh" ]
CMD [ "sleep", "infinity" ]
