# <%= projectTitle %>

A Python FastAPI app.

## Setup
Some software is required to run the app. These instructions have been tested on Ubuntu 20.04, but should translate well to OSX.

### Install/update `poetry`

#### Ubuntu:

Install Python 3.9 or later:

```
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt install python3.9-dev
```

Install Pip and Poetry:

```
sudo apt update
sudo apt install python3-pip
pip3 install poetry
```

#### OSX (untested)

```
brew install poetry pyenv
pyenv install 3.9.5
pyenv local 3.9.5
```

### Install python packages

```
poetry install
```

### Run the app

First you'll need to create a database (make sure Postgres is installed). Make sure to set the appropriate variables in `.env` as well.
```
createdb -U <dbuser> <dbname>
```

Then, initialize:
```
cd backend
poetry run python pre_start.py
```

Now you can run the server with live reload:
```
nx serve <%= projectName %>
```

### Test

Run the tests
```
nx test <%= projectName %>
```

### Format

Run black formatter
```
nx format <%= projectName %>
```

### Migrations

TODO -- add executors

Apply migrations
```
poetry run alembic upgrade head
```

Generate a migration
```
poetry run alembic revision --autogenerate -m "Description"
```

## App configuration table

Key                          | Default            | Description
---------------------------- | ------------------ | ---------------------
APP_DOMAIN                   |                    | Name of the server, must match production server name.
APP_PORT                     | 5000               |
API_PREFIX                   | /api               | API url prefix
POSTGRES_USER                |                    | Postgres database user
POSTGRES_PASSWORD            |                    | Postgres database password
POSTGRES_SERVER              |                    | Postgres server url
POSTGRES_DB                  |                    | Postgres database name
TEST_DB                      | postgres_test      | Unit test database name